@model photographers.Models.Photographer

@{
    ViewBag.Title = "Create";
}

<div class="p-3">
    <h2>Create</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal w-75">
            <h4>Photographer</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="d-flex justify-content-start">
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2 text-nowrap", placeholder = "Email" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2 text-nowrap" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="d-flex justify-content-start">
                <div class="form-group">
                    @Html.LabelFor(model => model.website, htmlAttributes: new { @class = "control-label col-md-2 text-nowrap" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.website, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.website, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.instagram, htmlAttributes: new { @class = "control-label col-md-2 text-nowrap" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.instagram, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.instagram, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.profileImgURL, htmlAttributes: new { @class = "control-label col-md-2 text-nowrap" })
                <div class="col-md-10">
                    <input type="file" name="IMGfile" value="" class="form-control" />
                    @*@Html.EditorFor(model => model.profileImgURL, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.profileImgURL, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.tel, htmlAttributes: new { @class = "control-label col-md-2 text-nowrap" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.tel, new { htmlAttributes = new { @class = "form-control", Type = "tel" } })
                    @Html.ValidationMessageFor(model => model.tel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2 text-nowrap" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.experienceThan, htmlAttributes: new { @class = "control-label col-md-2 text-nowrap" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.experienceThan, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.experienceThan, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IDportafolio, "IDportafolio", htmlAttributes: new { @class = "control-label col-md-2 text-nowrap" })
                <div class="col-md-10">
                    @Html.DropDownList("IDportafolio", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IDportafolio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

</div>